name: pipeline
on:
  push:
    branches:
      - main

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Build
        run: |
          cd app
          mvn clean install 
          cd target
          mkdir app
          ls -la
          chmod 777 app
          mv *.jar app
          cd app
          mv *.jar app-fastfood-producao.jar
          ls -la 

      - name: Upload jar
        uses: actions/upload-artifact@v2
        with:
          name: app
          path: '${{ github.workspace }}/app/target/app/app-fastfood-producao.jar'

  testes:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checagem do codigo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configuracao java
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Exectar testes unitarios
        run: |
          cd app
          mvn test

  code-analysis:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'corretto'

    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        cd app
        mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=pedroph23_app-fastfood-producao

  publish-docker:

    runs-on: ubuntu-latest
    needs: [testes, code-analysis]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download jar
        uses: actions/download-artifact@v2
        with:
          name: app
          path: '${{ github.workspace }}/app'

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: caikemury
          password: shakiralanadelrey

      - name: DOCKER BUILD AND PUSH
        run: |
          docker build -t caikemury/app-fastfood-producao.jar:latest --build-arg trustStorePassword=a .
          docker push caikemury/app-fastfood-producao.jar:latest

  deploy-eks:
    runs-on: ubuntu-latest
    needs:
      - publish-docker

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        run: |
          echo ${{ secrets.AWS_ACCESS_KEY_ID }} > aws_access_key_id
          echo ${{ secrets.AWS_SECRET_ACCESS_KEY }} > aws_secret_access_key
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1

      - name: Deploy to EKS
        run: |
          aws eks --region us-east-1 update-kubeconfig --name appfastfood-cluster-prod
          kubectl apply -f infra
          kubectl get nodes
          kubectl get pods
          kubectl get deployments
